<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classoscit_1_1_mutex" kind="class" prot="public">
    <compoundname>oscit::Mutex</compoundname>
    <basecompoundref refid="classoscit_1_1_typed" prot="public" virt="non-virtual">oscit::Typed</basecompoundref>
    <basecompoundref refid="classoscit_1_1_non_copyable" prot="private" virt="non-virtual">oscit::NonCopyable</basecompoundref>
    <derivedcompoundref refid="classoscit_1_1_thread" prot="public" virt="non-virtual">oscit::Thread</derivedcompoundref>
    <derivedcompoundref refid="classoscit_1_1_zero_conf_browser" prot="public" virt="non-virtual">oscit::ZeroConfBrowser</derivedcompoundref>
    <derivedcompoundref refid="classoscit_1_1_zero_conf_registration" prot="public" virt="non-virtual">oscit::ZeroConfRegistration</derivedcompoundref>
    <includes refid="mutex_8h" local="no">mutex.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classoscit_1_1_mutex_1a3d01025f652d2117bb0df55eede7bdd8" prot="private" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t oscit::Mutex::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/mutex.h" line="77" bodyfile="/Users/gaspard/git/oscit/include/oscit/mutex.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classoscit_1_1_mutex_1ae41e751604af40fc4ed78d16c63be52f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>oscit::Mutex::Mutex</definition>
        <argsstring>()</argsstring>
        <name>Mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/mutex.h" line="48" bodyfile="/Users/gaspard/git/oscit/include/oscit/mutex.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classoscit_1_1_mutex_1abc6c403ed2bd809dead4e1307e18cc65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual oscit::Mutex::~Mutex</definition>
        <argsstring>()</argsstring>
        <name>~Mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/mutex.h" line="56" bodyfile="/Users/gaspard/git/oscit/include/oscit/mutex.h" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classoscit_1_1_mutex_1a016dda2b6b467aa8e3a866be3bd0f86e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void oscit::Mutex::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the mutex is locked by another thread, waits until it is unlocked, lock and continue. If the mutex is not locked. Lock and continue. If this thread locked it: bang! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/mutex.h" line="67" bodyfile="/Users/gaspard/git/oscit/include/oscit/mutex.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classoscit_1_1_mutex_1a4eb03cce21055fcfd8ae3462661fac6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void oscit::Mutex::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release the lock so others can work on the data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/mutex.h" line="72" bodyfile="/Users/gaspard/git/oscit/include/oscit/mutex.h" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Simple wrapper class for a fast mutex. FIXME: Can we remove &apos;Typed&apos; ? </para>    </detaileddescription>
    <inheritancegraph>
      <node id="694">
        <label>oscit::OscMapCommand</label>
        <link refid="classoscit_1_1_osc_map_command"/>
        <childnode refid="693" relation="public-inheritance">
        </childnode>
      </node>
      <node id="688">
        <label>oscit::Mutex</label>
        <link refid="classoscit_1_1_mutex"/>
        <childnode refid="689" relation="public-inheritance">
        </childnode>
        <childnode refid="690" relation="private-inheritance">
        </childnode>
      </node>
      <node id="691">
        <label>oscit::Thread</label>
        <link refid="classoscit_1_1_thread"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
      </node>
      <node id="690">
        <label>oscit::NonCopyable</label>
        <link refid="classoscit_1_1_non_copyable"/>
      </node>
      <node id="696">
        <label>oscit::ZeroConfRegistration</label>
        <link refid="classoscit_1_1_zero_conf_registration"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
      </node>
      <node id="695">
        <label>oscit::ZeroConfBrowser</label>
        <link refid="classoscit_1_1_zero_conf_browser"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
      </node>
      <node id="693">
        <label>oscit::OscCommand</label>
        <link refid="classoscit_1_1_osc_command"/>
        <childnode refid="692" relation="public-inheritance">
        </childnode>
      </node>
      <node id="689">
        <label>oscit::Typed</label>
        <link refid="classoscit_1_1_typed"/>
      </node>
      <node id="692">
        <label>oscit::Command</label>
        <link refid="classoscit_1_1_command"/>
        <childnode refid="691" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="697">
        <label>oscit::Mutex</label>
        <link refid="classoscit_1_1_mutex"/>
        <childnode refid="698" relation="public-inheritance">
        </childnode>
        <childnode refid="699" relation="private-inheritance">
        </childnode>
      </node>
      <node id="699">
        <label>oscit::NonCopyable</label>
        <link refid="classoscit_1_1_non_copyable"/>
      </node>
      <node id="698">
        <label>oscit::Typed</label>
        <link refid="classoscit_1_1_typed"/>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/oscit/include/oscit/mutex.h" line="44" bodyfile="/Users/gaspard/git/oscit/include/oscit/mutex.h" bodystart="44" bodyend="78"/>
    <listofallmembers>
      <member refid="classoscit_1_1_typed_1a9d91142c1ff172635833f4b2a06d5d3b" prot="public" virt="non-virtual"><scope>oscit::Mutex</scope><name>class_name</name></member>
      <member refid="classoscit_1_1_typed_1a4aba9ae57b258b6d678c685d190ec281" prot="public" virt="non-virtual"><scope>oscit::Mutex</scope><name>is_a</name></member>
      <member refid="classoscit_1_1_mutex_1a016dda2b6b467aa8e3a866be3bd0f86e" prot="public" virt="non-virtual"><scope>oscit::Mutex</scope><name>lock</name></member>
      <member refid="classoscit_1_1_mutex_1ae41e751604af40fc4ed78d16c63be52f" prot="public" virt="non-virtual"><scope>oscit::Mutex</scope><name>Mutex</name></member>
      <member refid="classoscit_1_1_mutex_1a3d01025f652d2117bb0df55eede7bdd8" prot="private" virt="non-virtual"><scope>oscit::Mutex</scope><name>mutex_</name></member>
      <member refid="classoscit_1_1_non_copyable_1a1f0c0fedea54b6e20aeefbeefdce67f7" prot="private" virt="non-virtual"><scope>oscit::Mutex</scope><name>NonCopyable</name></member>
      <member refid="classoscit_1_1_typed_1a72ecaff553f3b9028dd57afee597dc44" prot="public" virt="non-virtual"><scope>oscit::Mutex</scope><name>type_cast</name></member>
      <member refid="classoscit_1_1_mutex_1a4eb03cce21055fcfd8ae3462661fac6f" prot="public" virt="non-virtual"><scope>oscit::Mutex</scope><name>unlock</name></member>
      <member refid="classoscit_1_1_mutex_1abc6c403ed2bd809dead4e1307e18cc65" prot="public" virt="virtual"><scope>oscit::Mutex</scope><name>~Mutex</name></member>
      <member refid="classoscit_1_1_non_copyable_1ad21ed15dea6d4700732a2cbc7f98e20a" prot="private" virt="non-virtual"><scope>oscit::Mutex</scope><name>~NonCopyable</name></member>
      <member refid="classoscit_1_1_typed_1ab92fb67d52050227718772b14f74b1b6" prot="public" virt="virtual"><scope>oscit::Mutex</scope><name>~Typed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
