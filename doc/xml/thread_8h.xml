<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="thread_8h" kind="file">
    <compoundname>thread.h</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">csignal</includes>
    <includes local="no">fstream</includes>
    <includes refid="semaphore_8h" local="no">semaphore.h</includes>
    <includes local="yes">assert.h</includes>
    <includes refid="mutex_8h" local="yes">oscit/mutex.h</includes>
    <includedby refid="command_8h" local="yes">/Users/gaspard/git/oscit/include/oscit/command.h</includedby>
    <includedby refid="oscit_8h" local="yes">/Users/gaspard/git/oscit/include/oscit/oscit.h</includedby>
    <includedby refid="timer_8h" local="yes">/Users/gaspard/git/oscit/include/oscit/timer.h</includedby>
    <incdepgraph>
      <node id="2895">
        <label>oscit/non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="2896">
        <label>oscit/mutex.h</label>
        <link refid="mutex_8h"/>
        <childnode refid="2897" relation="include">
        </childnode>
        <childnode refid="2894" relation="include">
        </childnode>
        <childnode refid="2898" relation="include">
        </childnode>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2899" relation="include">
        </childnode>
      </node>
      <node id="2894">
        <label>assert.h</label>
      </node>
      <node id="2888">
        <label>/Users/gaspard/git/oscit/include/oscit/thread.h</label>
        <link refid="thread.h"/>
        <childnode refid="2889" relation="include">
        </childnode>
        <childnode refid="2890" relation="include">
        </childnode>
        <childnode refid="2891" relation="include">
        </childnode>
        <childnode refid="2892" relation="include">
        </childnode>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2894" relation="include">
        </childnode>
        <childnode refid="2896" relation="include">
        </childnode>
      </node>
      <node id="2889">
        <label>errno.h</label>
      </node>
      <node id="2892">
        <label>fstream</label>
      </node>
      <node id="2897">
        <label>pthread.h</label>
      </node>
      <node id="2890">
        <label>string.h</label>
      </node>
      <node id="2898">
        <label>cstdio</label>
      </node>
      <node id="2893">
        <label>semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="2894" relation="include">
        </childnode>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2889" relation="include">
        </childnode>
        <childnode refid="2890" relation="include">
        </childnode>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2896" relation="include">
        </childnode>
      </node>
      <node id="2901">
        <label>iostream</label>
      </node>
      <node id="2891">
        <label>csignal</label>
      </node>
      <node id="2899">
        <label>oscit/typed.h</label>
        <link refid="typed_8h"/>
        <childnode refid="2900" relation="include">
        </childnode>
        <childnode refid="2901" relation="include">
        </childnode>
      </node>
      <node id="2900">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2903">
        <label>/Users/gaspard/git/oscit/include/oscit/command.h</label>
        <link refid="command_8h"/>
        <childnode refid="2904" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
        <childnode refid="2907" relation="include">
        </childnode>
      </node>
      <node id="2902">
        <label>/Users/gaspard/git/oscit/include/oscit/thread.h</label>
        <link refid="thread.h"/>
        <childnode refid="2903" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
        <childnode refid="2923" relation="include">
        </childnode>
      </node>
      <node id="2904">
        <label>/Users/gaspard/git/oscit/include/oscit/osc_command.h</label>
        <link refid="osc__command_8h"/>
        <childnode refid="2905" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2919">
        <label>/Users/gaspard/git/oscit/include/oscit/object_proxy.h</label>
        <link refid="object__proxy_8h"/>
        <childnode refid="2917" relation="include">
        </childnode>
      </node>
      <node id="2907">
        <label>/Users/gaspard/git/oscit/include/oscit/root.h</label>
        <link refid="root_8h"/>
        <childnode refid="2908" relation="include">
        </childnode>
        <childnode refid="2909" relation="include">
        </childnode>
        <childnode refid="2910" relation="include">
        </childnode>
        <childnode refid="2911" relation="include">
        </childnode>
        <childnode refid="2912" relation="include">
        </childnode>
        <childnode refid="2914" relation="include">
        </childnode>
        <childnode refid="2915" relation="include">
        </childnode>
        <childnode refid="2916" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
        <childnode refid="2917" relation="include">
        </childnode>
        <childnode refid="2918" relation="include">
        </childnode>
        <childnode refid="2922" relation="include">
        </childnode>
      </node>
      <node id="2906">
        <label>/Users/gaspard/git/oscit/include/oscit/oscit.h</label>
        <link refid="oscit_8h"/>
      </node>
      <node id="2914">
        <label>/Users/gaspard/git/oscit/include/oscit/info_meta_method.h</label>
        <link refid="info__meta__method_8h"/>
      </node>
      <node id="2912">
        <label>/Users/gaspard/git/oscit/include/oscit/file_method.h</label>
        <link refid="file__method_8h"/>
        <childnode refid="2913" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2911">
        <label>/Users/gaspard/git/oscit/include/oscit/error_meta_method.h</label>
        <link refid="error__meta__method_8h"/>
      </node>
      <node id="2916">
        <label>/Users/gaspard/git/oscit/include/oscit/list_with_attributes_meta_method.h</label>
        <link refid="list__with__attributes__meta__method_8h"/>
      </node>
      <node id="2920">
        <label>/Users/gaspard/git/oscit/include/oscit/osc_root_proxy.h</label>
        <link refid="osc__root__proxy_8h"/>
      </node>
      <node id="2905">
        <label>/Users/gaspard/git/oscit/include/oscit/osc_map_command.h</label>
        <link refid="osc__map__command_8h"/>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2909">
        <label>/Users/gaspard/git/oscit/include/oscit/attrs_meta_method.h</label>
        <link refid="attrs__meta__method_8h"/>
      </node>
      <node id="2923">
        <label>/Users/gaspard/git/oscit/include/oscit/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2910">
        <label>/Users/gaspard/git/oscit/include/oscit/call.h</label>
        <link refid="call_8h"/>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2917">
        <label>/Users/gaspard/git/oscit/include/oscit/proxy_factory.h</label>
        <link refid="proxy__factory_8h"/>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2913">
        <label>/Users/gaspard/git/oscit/include/oscit/hash_file_method.h</label>
        <link refid="hash__file__method_8h"/>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2915">
        <label>/Users/gaspard/git/oscit/include/oscit/list_meta_method.h</label>
        <link refid="list__meta__method_8h"/>
      </node>
      <node id="2921">
        <label>/Users/gaspard/git/oscit/include/oscit/zeroconf_browser.h</label>
        <link refid="zeroconf__browser_8h"/>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2918">
        <label>/Users/gaspard/git/oscit/include/oscit/root_proxy.h</label>
        <link refid="root__proxy_8h"/>
        <childnode refid="2919" relation="include">
        </childnode>
        <childnode refid="2920" relation="include">
        </childnode>
        <childnode refid="2917" relation="include">
        </childnode>
        <childnode refid="2921" relation="include">
        </childnode>
      </node>
      <node id="2908">
        <label>/Users/gaspard/git/oscit/include/oscit/alias.h</label>
        <link refid="alias_8h"/>
      </node>
      <node id="2922">
        <label>/Users/gaspard/git/oscit/include/oscit/tree_meta_method.h</label>
        <link refid="tree__meta__method_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classoscit_1_1_thread" prot="public">oscit::Thread</innerclass>
    <innernamespace refid="namespaceoscit">oscit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>OSCIT<sp/>library<sp/>(http://rubyk.org/liboscit)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-2010<sp/>by<sp/>Gaspard<sp/>Bucher<sp/>-<sp/>Buma<sp/>(http://teti.ch).</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OSCIT_INCLUDE_OSCIT_THREAD_H_</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OSCIT_INCLUDE_OSCIT_THREAD_H_</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>refactor<sp/>all<sp/>this<sp/>to<sp/>move<sp/>all<sp/>thread<sp/>specific<sp/>code<sp/>into<sp/>&apos;cpp&apos;<sp/>file<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>errno</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>strerror</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="semaphore_8h" kindref="compound">semaphore.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mutex_8h" kindref="compound">oscit/mutex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="semaphore_8h" kindref="compound">oscit/semaphore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">oscit<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classoscit_1_1_thread" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classoscit_1_1_thread" kindref="compound">Thread</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_mutex" kindref="compound">Mutex</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="typed_8h_1abaf25d3e77e6e8bc3eff62b79e641f4d" kindref="member">TYPED</ref>(</highlight><highlight class="stringliteral">&quot;Mutex.Thread&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classoscit_1_1_thread_1aaf0789bf491951f40956bddef73a2ea7" kindref="member">Thread</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1aae027cef80dc02fc408320f52f441080" kindref="member">~Thread</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*Tmethod)(Thread*)&gt;</highlight></codeline>
<codeline lineno="57" refid="classoscit_1_1_thread_1a8ff725bd92baa91a1af56f2220402687" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a8ff725bd92baa91a1af56f2220402687" kindref="member">start_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*parameter<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classoscit_1_1_thread_1ad2b5b8aa03d15f8ef97c5347fd01698a" kindref="member">is_running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>owner_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>static_method_<sp/>=<sp/>Tmethod;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1a668701b16f7e18eef3d324401877be66" kindref="member">parameter_</ref><sp/><sp/>=<sp/>parameter;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;thread_id_,<sp/>NULL,<sp/>&amp;s_start_static_thread,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>semaphore_.<ref refid="classoscit_1_1_semaphore_1a6abb227cea5114eaa9c531a23c7103fd" kindref="member">acquire</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classoscit_1_1_thread_1a75a606dfb4fdae23dc691b4ff9c575b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a75a606dfb4fdae23dc691b4ff9c575b3" kindref="member">start_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*static_method)(<ref refid="classoscit_1_1_thread" kindref="compound">Thread</ref>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*parameter<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classoscit_1_1_thread_1ad2b5b8aa03d15f8ef97c5347fd01698a" kindref="member">is_running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>owner_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>static_method_<sp/>=<sp/>static_method;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1a668701b16f7e18eef3d324401877be66" kindref="member">parameter_</ref><sp/><sp/>=<sp/>parameter;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;thread_id_,<sp/>NULL,<sp/>&amp;s_start_static_thread,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>semaphore_.<ref refid="classoscit_1_1_semaphore_1a6abb227cea5114eaa9c531a23c7103fd" kindref="member">acquire</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)(Thread*)&gt;</highlight></codeline>
<codeline lineno="96" refid="classoscit_1_1_thread_1a865b8ceed25d894de9e055c1c6db1324" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a865b8ceed25d894de9e055c1c6db1324" kindref="member">start_thread</ref>(T<sp/>*owner,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*parameter<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classoscit_1_1_thread_1ad2b5b8aa03d15f8ef97c5347fd01698a" kindref="member">is_running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>owner_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>owner;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1a668701b16f7e18eef3d324401877be66" kindref="member">parameter_</ref><sp/><sp/>=<sp/>parameter;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;thread_id_,<sp/>NULL,<sp/>&amp;s_start_thread&lt;T,Tmethod&gt;,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>semaphore_.<ref refid="classoscit_1_1_semaphore_1a6abb227cea5114eaa9c531a23c7103fd" kindref="member">acquire</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)()&gt;</highlight></codeline>
<codeline lineno="116" refid="classoscit_1_1_thread_1a865b8ceed25d894de9e055c1c6db1324" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a865b8ceed25d894de9e055c1c6db1324" kindref="member">start_thread</ref>(T<sp/>*owner,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*parameter<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classoscit_1_1_thread_1ad2b5b8aa03d15f8ef97c5347fd01698a" kindref="member">is_running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>owner_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>owner;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1a668701b16f7e18eef3d324401877be66" kindref="member">parameter_</ref><sp/><sp/>=<sp/>parameter;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;thread_id_,<sp/>NULL,<sp/>&amp;s_start_thread&lt;T,Tmethod&gt;,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>semaphore_.<ref refid="classoscit_1_1_semaphore_1a6abb227cea5114eaa9c531a23c7103fd" kindref="member">acquire</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classoscit_1_1_thread_1a835cce43082e48865d64d9724733c385" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a835cce43082e48865d64d9724733c385" kindref="member">should_run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classoscit_1_1_thread_1ac14ace1b47f8e36b6105d38c4069d2de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1ac14ace1b47f8e36b6105d38c4069d2de" kindref="member">kill</ref>()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!thread_id_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!pthread_equal(thread_id_,<sp/>pthread_self()));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pthread_kill(thread_id_,<sp/>SIGTERM);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cancel(thread_id_);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(thread_id_,<sp/>NULL);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>thread_id_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classoscit_1_1_thread_1a3b5b22e665dc684be5c6a98c9b404968" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a3b5b22e665dc684be5c6a98c9b404968" kindref="member">send_signal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!pthread_equal(thread_id_,<sp/>pthread_self()));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_kill(thread_id_,<sp/>sig);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classoscit_1_1_thread_1ac7f0735901dfcc334cbe8b71b8b246f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1ac7f0735901dfcc334cbe8b71b8b246f6" kindref="member">register_signal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>cannot<sp/>use<sp/>the<sp/>assertion<sp/>because<sp/>thread_id_<sp/>might<sp/>not<sp/>be<sp/>set<sp/>yet<sp/>(race<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert(pthread_equal(thread_id_,<sp/>pthread_self()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(sig,<sp/>terminate);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classoscit_1_1_thread_1aee8748532b84f6c7468b143322883597" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1aee8748532b84f6c7468b143322883597" kindref="member">join</ref>()<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thread_id_)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>we<sp/>do<sp/>not<sp/>join<sp/>on<sp/>self<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_join(thread_id_,<sp/>NULL);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thread_id_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classoscit_1_1_thread_1ada993f1c96a4f1cc51b5b69f6cb5d6b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1ada993f1c96a4f1cc51b5b69f6cb5d6b0" kindref="member">quit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classoscit_1_1_thread_1ad2b5b8aa03d15f8ef97c5347fd01698a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1ad2b5b8aa03d15f8ef97c5347fd01698a" kindref="member">is_running</ref>()<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thread_id_<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1aaad5213036214bf55dbcaf532d0b528e" kindref="member">high_priority</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a0c51ff3a71ef65bfbef2da36528a9508" kindref="member">normal_priority</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a40c15a9203e95fa9e1888a678d581be0" kindref="member">millisleep</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>milliseconds);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classoscit_1_1_thread_1a0e8495bb727bccd28d1bc0fdc4f332f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1a0e8495bb727bccd28d1bc0fdc4f332f1" kindref="member">thread_ready</ref>()<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signals<sp/>installed,<sp/>we<sp/>can<sp/>free<sp/>parent<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>semaphore_.<ref refid="classoscit_1_1_semaphore_1a6563d83a1b37c5c217e3e5d60f8bc109" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classoscit_1_1_thread_1ab82f6e51badc2bee9b2693d984add161" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classoscit_1_1_semaphore" kindref="compound">Semaphore</ref><sp/>&amp;<ref refid="classoscit_1_1_thread_1ab82f6e51badc2bee9b2693d984add161" kindref="member">semaphore</ref>()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>semaphore_;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classoscit_1_1_thread_1af9e624afe0741e2376366518f53a827e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread" kindref="compound">Thread</ref><sp/>*<ref refid="classoscit_1_1_thread_1af9e624afe0741e2376366518f53a827e" kindref="member">thread_this</ref>()<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classoscit_1_1_thread" kindref="compound">Thread</ref>*)<sp/>pthread_getspecific(<ref refid="classoscit_1_1_thread_1a3ef55ef30cb89b171a7fc2596a79ab7c" kindref="member">sThisKey</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classoscit_1_1_thread_1a3ef55ef30cb89b171a7fc2596a79ab7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_key_t<sp/><ref refid="classoscit_1_1_thread_1a3ef55ef30cb89b171a7fc2596a79ab7c" kindref="member">sThisKey</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classoscit_1_1_thread_1a668701b16f7e18eef3d324401877be66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classoscit_1_1_thread_1a668701b16f7e18eef3d324401877be66" kindref="member">parameter_</ref>;<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_thread_this(<ref refid="classoscit_1_1_thread" kindref="compound">Thread</ref><sp/>*thread)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>pthread_setspecific(<ref refid="classoscit_1_1_thread_1a3ef55ef30cb89b171a7fc2596a79ab7c" kindref="member">sThisKey</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)thread);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>s_start_static_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_ptr)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread" kindref="compound">Thread</ref><sp/>*<sp/>thread<sp/>=<sp/>(<ref refid="classoscit_1_1_thread" kindref="compound">Thread</ref>*)thread_ptr;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>of<sp/>new<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>set_thread_this(thread);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classoscit_1_1_thread_1ac7f0735901dfcc334cbe8b71b8b246f6" kindref="member">register_signal</ref>(SIGTERM);<sp/></highlight><highlight class="comment">//<sp/>register<sp/>a<sp/>SIGTERM<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classoscit_1_1_thread_1ac7f0735901dfcc334cbe8b71b8b246f6" kindref="member">register_signal</ref>(SIGINT);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_setcancelstate(PTHREAD_CANCEL_ENABLE,<sp/>NULL);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removing<sp/>comment<sp/>below<sp/>=<sp/>force<sp/>cancelation<sp/>to<sp/>occur<sp/>NOW,<sp/>whatever<sp/>the<sp/>program<sp/>is<sp/>doing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pthread_setcanceltype(PTHREAD_CANCEL_ASYNCHRONOUS,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>(*thread-&gt;static_method_)(thread);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;thread_id_<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>running<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)(Thread*)&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*s_start_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_ptr)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1aaf0789bf491951f40956bddef73a2ea7" kindref="member">Thread</ref><sp/>*<sp/>thread<sp/>=<sp/>(<ref refid="classoscit_1_1_thread_1aaf0789bf491951f40956bddef73a2ea7" kindref="member">Thread</ref>*)thread_ptr;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>of<sp/>new<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>set_thread_this(thread);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;register_signal(SIGTERM);<sp/></highlight><highlight class="comment">//<sp/>register<sp/>a<sp/>SIGTERM<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;register_signal(SIGINT);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_setcancelstate(PTHREAD_CANCEL_ENABLE,<sp/>NULL);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pthread_setcanceltype(PTHREAD_CANCEL_ASYNCHRONOUS,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*owner<sp/>=<sp/>(T*)thread-&gt;owner_;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;should_run_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>(owner-&gt;*Tmethod)(thread);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;thread_id_<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>running<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)()&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>s_start_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_ptr)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1aaf0789bf491951f40956bddef73a2ea7" kindref="member">Thread</ref><sp/>*<sp/>thread<sp/>=<sp/>(<ref refid="classoscit_1_1_thread_1aaf0789bf491951f40956bddef73a2ea7" kindref="member">Thread</ref>*)thread_ptr;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>of<sp/>new<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>set_thread_this(thread);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;register_signal(SIGTERM);<sp/></highlight><highlight class="comment">//<sp/>register<sp/>a<sp/>SIGTERM<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;register_signal(SIGINT);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*owner<sp/>=<sp/>(T*)thread-&gt;owner_;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;should_run_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>(owner-&gt;*Tmethod)();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;thread_id_<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>running<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>terminate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoscit_1_1_thread_1af9e624afe0741e2376366518f53a827e" kindref="member">thread_this</ref>()-&gt;quit();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*owner_;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>void<sp/>(*static_method_)(<ref refid="classoscit_1_1_thread_1aaf0789bf491951f40956bddef73a2ea7" kindref="member">Thread</ref>*);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>pthread_t<sp/>thread_id_;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normal_sched_policy_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sched_param<sp/>normal_thread_param_;<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303" refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_thread_1ac14a7771b2b20e79b5de860e69880386" kindref="member">should_run_</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="classoscit_1_1_semaphore" kindref="compound">Semaphore</ref><sp/>semaphore_;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>oscit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>OSCIT_INCLUDE_OSCIT_THREAD_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/gaspard/git/oscit/include/oscit/thread.h"/>
  </compounddef>
</doxygen>
