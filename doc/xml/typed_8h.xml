<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="typed_8h" kind="file">
    <compoundname>typed.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">iostream</includes>
    <includedby refid="mutex_8h" local="yes">/Users/gaspard/git/oscit/include/oscit/mutex.h</includedby>
    <includedby refid="object_8h" local="yes">/Users/gaspard/git/oscit/include/oscit/object.h</includedby>
    <incdepgraph>
      <node id="3015">
        <label>iostream</label>
      </node>
      <node id="3013">
        <label>/Users/gaspard/git/oscit/include/oscit/typed.h</label>
        <link refid="typed.h"/>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
      </node>
      <node id="3014">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3017">
        <label>/Users/gaspard/git/oscit/include/oscit/mutex.h</label>
        <link refid="mutex_8h"/>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3051" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3052" relation="include">
        </childnode>
      </node>
      <node id="3044">
        <label>/Users/gaspard/git/oscit/include/oscit/observer.h</label>
        <link refid="observer_8h"/>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3045" relation="include">
        </childnode>
      </node>
      <node id="3048">
        <label>/Users/gaspard/git/oscit/include/oscit/command.h</label>
        <link refid="command_8h"/>
        <childnode refid="3049" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="3052">
        <label>/Users/gaspard/git/oscit/include/oscit/zeroconf_registration.h</label>
        <link refid="zeroconf__registration_8h"/>
      </node>
      <node id="3047">
        <label>/Users/gaspard/git/oscit/include/oscit/thread.h</label>
        <link refid="thread_8h"/>
        <childnode refid="3048" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3051" relation="include">
        </childnode>
      </node>
      <node id="3042">
        <label>/Users/gaspard/git/oscit/include/oscit/c_thash.h</label>
        <link refid="c__thash_8h"/>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="3049">
        <label>/Users/gaspard/git/oscit/include/oscit/osc_command.h</label>
        <link refid="osc__command_8h"/>
        <childnode refid="3050" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3035">
        <label>/Users/gaspard/git/oscit/include/oscit/object_proxy.h</label>
        <link refid="object__proxy_8h"/>
        <childnode refid="3033" relation="include">
        </childnode>
      </node>
      <node id="3039">
        <label>/Users/gaspard/git/oscit/include/oscit/osc_remote_object.h</label>
        <link refid="osc__remote__object_8h"/>
      </node>
      <node id="3023">
        <label>/Users/gaspard/git/oscit/include/oscit/root.h</label>
        <link refid="root_8h"/>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
        <childnode refid="3030" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
      </node>
      <node id="3021">
        <label>/Users/gaspard/git/oscit/include/oscit/oscit.h</label>
        <link refid="oscit_8h"/>
      </node>
      <node id="3030">
        <label>/Users/gaspard/git/oscit/include/oscit/info_meta_method.h</label>
        <link refid="info__meta__method_8h"/>
      </node>
      <node id="3028">
        <label>/Users/gaspard/git/oscit/include/oscit/file_method.h</label>
        <link refid="file__method_8h"/>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3027">
        <label>/Users/gaspard/git/oscit/include/oscit/error_meta_method.h</label>
        <link refid="error__meta__method_8h"/>
      </node>
      <node id="3032">
        <label>/Users/gaspard/git/oscit/include/oscit/list_with_attributes_meta_method.h</label>
        <link refid="list__with__attributes__meta__method_8h"/>
      </node>
      <node id="3036">
        <label>/Users/gaspard/git/oscit/include/oscit/osc_root_proxy.h</label>
        <link refid="osc__root__proxy_8h"/>
      </node>
      <node id="3019">
        <label>/Users/gaspard/git/oscit/include/oscit/log_object.h</label>
        <link refid="log__object_8h"/>
      </node>
      <node id="3050">
        <label>/Users/gaspard/git/oscit/include/oscit/osc_map_command.h</label>
        <link refid="osc__map__command_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3025">
        <label>/Users/gaspard/git/oscit/include/oscit/attrs_meta_method.h</label>
        <link refid="attrs__meta__method_8h"/>
      </node>
      <node id="3051">
        <label>/Users/gaspard/git/oscit/include/oscit/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3026">
        <label>/Users/gaspard/git/oscit/include/oscit/call.h</label>
        <link refid="call_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3033">
        <label>/Users/gaspard/git/oscit/include/oscit/proxy_factory.h</label>
        <link refid="proxy__factory_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3029">
        <label>/Users/gaspard/git/oscit/include/oscit/hash_file_method.h</label>
        <link refid="hash__file__method_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3031">
        <label>/Users/gaspard/git/oscit/include/oscit/list_meta_method.h</label>
        <link refid="list__meta__method_8h"/>
      </node>
      <node id="3041">
        <label>/Users/gaspard/git/oscit/include/oscit/rw_mutex.h</label>
        <link refid="rw__mutex_8h"/>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3043" relation="include">
        </childnode>
        <childnode refid="3046" relation="include">
        </childnode>
      </node>
      <node id="3040">
        <label>/Users/gaspard/git/oscit/include/oscit/semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="3041" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
      </node>
      <node id="3045">
        <label>/Users/gaspard/git/oscit/include/oscit/signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="3046">
        <label>/Users/gaspard/git/oscit/include/oscit/c_tvector.h</label>
        <link refid="c__tvector_8h"/>
        <childnode refid="3018" relation="include">
        </childnode>
      </node>
      <node id="3037">
        <label>/Users/gaspard/git/oscit/include/oscit/zeroconf_browser.h</label>
        <link refid="zeroconf__browser_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3034">
        <label>/Users/gaspard/git/oscit/include/oscit/root_proxy.h</label>
        <link refid="root__proxy_8h"/>
        <childnode refid="3035" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
      </node>
      <node id="3016">
        <label>/Users/gaspard/git/oscit/include/oscit/typed.h</label>
        <link refid="typed.h"/>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
      </node>
      <node id="3043">
        <label>/Users/gaspard/git/oscit/include/oscit/c_tlist.h</label>
        <link refid="c__tlist_8h"/>
        <childnode refid="3044" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3045" relation="include">
        </childnode>
      </node>
      <node id="3018">
        <label>/Users/gaspard/git/oscit/include/oscit/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3022" relation="include">
        </childnode>
        <childnode refid="3035" relation="include">
        </childnode>
        <childnode refid="3039" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="3024">
        <label>/Users/gaspard/git/oscit/include/oscit/alias.h</label>
        <link refid="alias_8h"/>
      </node>
      <node id="3022">
        <label>/Users/gaspard/git/oscit/include/oscit/object_handle.h</label>
        <link refid="object__handle_8h"/>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="3020">
        <label>/Users/gaspard/git/oscit/include/oscit/method.h</label>
        <link refid="method_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3038">
        <label>/Users/gaspard/git/oscit/include/oscit/tree_meta_method.h</label>
        <link refid="tree__meta__method_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classoscit_1_1_typed" prot="public">oscit::Typed</innerclass>
    <innernamespace refid="namespaceoscit">oscit</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="typed_8h_1abaf25d3e77e6e8bc3eff62b79e641f4d" prot="public" static="no">
        <name>TYPED</name>
        <param><defname>str</defname></param>
        <initializer>virtual const char *class_path() const { return str; } \
  static  const char *_path() { return str; } \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/typed.h" line="44" bodyfile="/Users/gaspard/git/oscit/include/oscit/typed.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="typed_8h_1ae5c8e890926a4fac53855b794cd96359" prot="public" static="no">
        <name>kind_of</name>
        <param><defname>klass</defname></param>
        <initializer>is_a(klass::_path())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/typed.h" line="76" bodyfile="/Users/gaspard/git/oscit/include/oscit/typed.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="typed_8h_1a460141e623c139370ea33a1309e41c83" prot="public" static="no">
        <name>TYPE_CAST</name>
        <param><defname>klass</defname></param>
        <param><defname>op</defname></param>
        <initializer>oscit::Typed::type_cast&lt;klass&gt;(op)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a pointer to the object if the type match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/oscit/include/oscit/typed.h" line="114" bodyfile="/Users/gaspard/git/oscit/include/oscit/typed.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>OSCIT<sp/>library<sp/>(http://rubyk.org/liboscit)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-2010<sp/>by<sp/>Gaspard<sp/>Bucher<sp/>-<sp/>Buma<sp/>(http://teti.ch).</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OSCIT_INCLUDE_OSCIT_TYPED_H_</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OSCIT_INCLUDE_OSCIT_TYPED_H_</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>RTTI<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>work<sp/>with<sp/>libs<sp/>and<sp/>such<sp/>(rubyk<sp/>does<sp/>not<sp/>recognize<sp/>oscit<sp/>objects...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>USE_RTTI_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">oscit<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="typed_8h_1abaf25d3e77e6e8bc3eff62b79e641f4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPED(str)<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/>virtual<sp/>const<sp/>char<sp/>*class_path()<sp/>const<sp/>{<sp/>return<sp/>str;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/>static<sp/><sp/>const<sp/>char<sp/>*_path()<sp/>{<sp/>return<sp/>str;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor">//<sp/>TODO:<sp/>can<sp/>we<sp/>make<sp/>this<sp/>a<sp/>const<sp/>var<sp/>instead<sp/>?</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RTTI_TYPE</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kind_of(klass)<sp/>is_a&lt;klass<sp/>*&gt;()</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Typed<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="typed_8h_1abaf25d3e77e6e8bc3eff62b79e641f4d" kindref="member">TYPED</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_typed_1ab92fb67d52050227718772b14f74b1b6" kindref="member">~Typed</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_typed_1a4aba9ae57b258b6d678c685d190ec281" kindref="member">is_a</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classoscit_1_1_typed_1a72ecaff553f3b9028dd57afee597dc44" kindref="member">type_cast</ref>()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classoscit_1_1_typed_1a9d91142c1ff172635833f4b2a06d5d3b" kindref="member">class_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>path(class_path());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>path.find_last_of(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos<sp/>==<sp/>std::string::npos<sp/>?<sp/>path<sp/>:<sp/>path.substr(pos+1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">#define<sp/>TYPE_CAST(klass,<sp/>op)<sp/>dynamic_cast&lt;klass<sp/>*&gt;(op)</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="typed_8h_1ae5c8e890926a4fac53855b794cd96359" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kind_of(klass)<sp/>is_a(klass::_path())</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classoscit_1_1_typed" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classoscit_1_1_typed" kindref="compound">Typed</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="typed_8h_1abaf25d3e77e6e8bc3eff62b79e641f4d" kindref="member">TYPED</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82" refid="classoscit_1_1_typed_1ab92fb67d52050227718772b14f74b1b6" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>~<ref refid="classoscit_1_1_typed" kindref="compound">Typed</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="85" refid="classoscit_1_1_typed_1a72ecaff553f3b9028dd57afee597dc44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="classoscit_1_1_typed_1a72ecaff553f3b9028dd57afee597dc44" kindref="member">type_cast</ref>(<ref refid="classoscit_1_1_typed" kindref="compound">Typed</ref><sp/>*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!obj)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;is_a(T::_path()))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)obj;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classoscit_1_1_typed_1a4aba9ae57b258b6d678c685d190ec281" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classoscit_1_1_typed_1a4aba9ae57b258b6d678c685d190ec281" kindref="member">is_a</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>c<sp/><sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>cl<sp/>=<sp/>class_path();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/>*cl)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++cl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*cl<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(*cl<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classoscit_1_1_typed_1a9d91142c1ff172635833f4b2a06d5d3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classoscit_1_1_typed_1a9d91142c1ff172635833f4b2a06d5d3b" kindref="member">class_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>path(class_path());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>path.find_last_of(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos<sp/>==<sp/>std::string::npos<sp/>?<sp/>path<sp/>:<sp/>path.substr(pos+1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="typed_8h_1a460141e623c139370ea33a1309e41c83" refkind="member"><highlight class="preprocessor">#define<sp/>TYPE_CAST(klass,<sp/>op)<sp/>oscit::Typed::type_cast&lt;klass&gt;(op)</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>USE_RTTI_TYPE</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>oscit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>OSCIT_INCLUDE_OSCIT_TYPED_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/gaspard/git/oscit/include/oscit/typed.h"/>
  </compounddef>
</doxygen>
